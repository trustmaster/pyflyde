from _typeshed import Incomplete as Incomplete
from flyde.node import Graph as Graph
from threading import Event

logger: Incomplete

class Flow:
    def __init__(self, imports: dict[str, list[str]]) -> None: ...
    def factory(self, class_name: str, args: dict): ...
    def run(self) -> None: ...
    def run_sync(self) -> None: ...
    @property
    def node(self) -> Graph: ...
    @property
    def stopped(self) -> Event: ...
    @classmethod
    def from_yaml(cls, path: str, yml: dict): ...
    @classmethod
    def from_file(cls, path: str): ...
    def to_dict(self) -> dict: ...

def add_folder_to_path(path: str): ...
def load_yaml_file(yaml_file: str) -> dict: ...
